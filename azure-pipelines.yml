# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: cont-mpx-svc-api-ref-articles
  azureContainerRegistry: acrDsiInfraHubPro
  acrUsername: xxxx
  acrPassword: xxxx

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pomkub.xml'
    options:  '--settings ./maven/settings.xml -DskipTests'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- script: |
    echo Construction et tag image docker
    docker build -f $(Build.SourcesDirectory)/src/main/docker/Dockerfile $(Build.SourcesDirectory)/target -t $(azureContainerRegistry).azurecr.io/$(imageName):latest -t $(azureContainerRegistry).azurecr.io/$(imageName):$(Build.BuildNumber)
    echo Liste des images docker construites
    docker image ls
    echo Connexion Azure Container Registry
    docker login -u $(acrUsername) -p $(acrPassword) $(azureContainerRegistry).azurecr.io
    echo Push image docker vers Azure Container Registry
    docker push $(azureContainerRegistry).azurecr.io/$(imageName):latest
    docker push $(azureContainerRegistry).azurecr.io/$(imageName):$(Build.BuildNumber)
  displayName: 'Construction de l''image docker et push de l''image vers $(azureContainerRegistry)'
